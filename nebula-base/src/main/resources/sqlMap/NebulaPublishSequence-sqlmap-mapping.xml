<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="nebula_publish_sequence">
    <resultMap id="RM-NebulaPublishSequence" type="com.olymtech.nebula.entity.NebulaPublishSequence">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="action_name" property="actionName" jdbcType="VARCHAR" />
        <result column="action_desc" property="actionDesc" jdbcType="VARCHAR" />
        <result column="action_class" property="actionClass" jdbcType="VARCHAR" />
        <result column="action_seq_id" property="actionSeqId" jdbcType="INTEGER" />
        <result column="action_group" property="actionGroup" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="NebulaPublishSequence-Base-Column-List">
        id,
        action_name,
        action_desc,
        action_class,
        action_seq_id,
        action_group
    </sql>
    <select id="Nebula-NebulaPublishSequenceDao-Select-By-Id" parameterType="java.lang.Integer" resultMap="RM-NebulaPublishSequence">
        select
        <include refid="NebulaPublishSequence-Base-Column-List"/>
        from nebula_publish_sequence
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="Nebula-NebulaPublishSequenceDao-Select-By-ActionName" parameterType="java.lang.String" resultMap="RM-NebulaPublishSequence">
        select
        <include refid="NebulaPublishSequence-Base-Column-List"/>
        from nebula_publish_sequence
        where action_name = #{actionname,jdbcType=VARCHAR}
    </select>
    <select id="Nebula-NebulaPublishSequenceDao-Select-Count" resultType="java.lang.Integer">
        select count(id) from nebula_publish_sequence
    </select>
    <select id="Nebula-NebulaPublishSequenceDao-Select-Count-Where" parameterType="NebulaPublishSequence" resultType="java.lang.Integer">
        select count(id) from nebula_publish_sequence
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="actionName != null">
                action_name = #{actionName}
            </if>
            <if test="actionSeqId != null">
                AND action_seq_id = #{actionSeqId}
            </if>
        </trim>
    </select>
    <select id="Nebula-NebulaPublishSequenceDao-Select-All-Paging-Where" parameterType="NebulaPublishSequence" resultMap="RM-NebulaPublishSequence">
        select <include refid="NebulaPublishSequence-Base-Column-List"/> from nebula_publish_sequence
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="actionName != null">
                action_name = #{actionName}
            </if>
            <if test="actionSeqId != null">
                AND action_seq_id = #{actionSeqId}
            </if>
        </trim>
        group by id order by id desc
    </select>
    <delete id="Nebula-NebulaPublishSequenceDao-Delete-By-Id" parameterType="java.lang.Integer">
        delete from nebula_publish_sequence
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="Nebula-NebulaPublishSequenceDao-Insert" parameterType="NebulaPublishSequence">
        insert into nebula_publish_sequence (
        id,
        action_name,
        action_desc,
        action_class,
        action_seq_id,
        action_group)
        values (#{id,jdbcType=INTEGER},
        #{actionName,jdbcType=VARCHAR},
        #{actionDesc,jdbcType=VARCHAR},
        #{actionClass,jdbcType=VARCHAR},
        #{actionSeqId,jdbcType=INTEGER},
        #{actionGroup,jdbcType=VARCHAR})
        <selectKey resultType="java.lang.Integer" keyProperty="id">
            SELECT LAST_INSERT_ID() AS ID
        </selectKey>
    </insert>
    <insert id="Nebula-NebulaPublishSequenceDao-Insert-Selective" parameterType="NebulaPublishSequence">
        insert into nebula_publish_sequence
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null" >
                id,
            </if>
            <if test="actionName != null" >
                action_name,
            </if>
            <if test="actionDesc != null" >
                action_desc,
            </if>
            <if test="actionClass != null" >
                action_class,
            </if>
            <if test="actionSeqId != null" >
                action_seq_id,
            </if>
            <if test="actionGroup != null" >
                action_group,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="actionName != null" >
                #{actionName,jdbcType=VARCHAR},
            </if>
            <if test="actionDesc != null" >
                #{actionDesc,jdbcType=VARCHAR},
            </if>
            <if test="actionClass != null" >
                #{actionClass,jdbcType=VARCHAR},
            </if>
            <if test="actionSeqId != null" >
                #{actionSeqId,jdbcType=INTEGER},
            </if>
            <if test="actionGroup != null" >
                #{actionGroup,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="Nebula-NebulaPublishSequenceDao-Update-By-Id-Selective" parameterType="NebulaPublishSequence">
        update nebula_publish_sequence
        <set>
            <if test="actionName != null" >
                action_name = #{actionName,jdbcType=VARCHAR},
            </if>
            <if test="actionDesc != null" >
                action_desc = #{actionDesc,jdbcType=VARCHAR},
            </if>
            <if test="actionClass != null" >
                action_class = #{actionClass,jdbcType=VARCHAR},
            </if>
            <if test="actionSeqId != null" >
                action_seq_id = #{actionSeqId,jdbcType=INTEGER},
            </if>
            <if test="actionGroup != null" >
                action_group = #{actionGroup,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="Nebula-NebulaPublishSequenceDao-Update-By-Id" parameterType="NebulaPublishSequence">
        update nebula_publish_sequence set
        action_name = #{actionName,jdbcType=VARCHAR},
        action_desc = #{actionDesc,jdbcType=VARCHAR},
        action_class = #{actionClass,jdbcType=VARCHAR},
        action_seq_id = #{actionSeqId,jdbcType=INTEGER},
        action_group = #{actionGroup,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="nebula_script_group">
    <resultMap id="RM-NebulaScriptGroup" type="com.olymtech.nebula.entity.NebulaScriptGroup">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="script_group_name" property="scriptGroupName" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="NebulaScriptGroup-Base-Column-List">
        id,
        script_group_name
    </sql>
    <select id="Nebula-NebulaScriptGroupDao-Select-By-Id" parameterType="java.lang.Integer" resultMap="RM-NebulaScriptGroup">
        select
        <include refid="NebulaScriptGroup-Base-Column-List"/>
        from nebula_script_group
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="Nebula-NebulaScriptGroupDao-Select-Count" resultType="java.lang.Integer">
        select count(id) from nebula_script_group
    </select>
    <select id="Nebula-NebulaScriptGroupDao-Select-Count-Where" parameterType="NebulaScriptGroup" resultType="java.lang.Integer">
        select count(id) from nebula_script_group
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="scriptGroupName != null">
                script_group_name = #{scriptGroupName}
            </if>
        </trim>
    </select>
    <select id="Nebula-NebulaScriptGroupDao-Select-All-Paging-Where" parameterType="NebulaScriptGroup" resultMap="RM-NebulaScriptGroup">
        select <include refid="NebulaScriptGroup-Base-Column-List"/> from nebula_script_group
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="scriptGroupName != null">
                script_group_name = #{scriptGroupName}
            </if>
        </trim>
        group by id order by id desc
    </select>
    <delete id="Nebula-NebulaScriptGroupDao-Delete-By-Id" parameterType="java.lang.Integer">
        delete from nebula_script_group
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="Nebula-NebulaScriptGroupDao-Insert" parameterType="NebulaScriptGroup">
        insert into nebula_script_group (
        id,
        script_group_name)
        values (#{id,jdbcType=INTEGER},
        #{scriptGroupName,jdbcType=VARCHAR})
        <selectKey resultType="java.lang.Integer" keyProperty="id">
            SELECT LAST_INSERT_ID() AS ID
        </selectKey>
    </insert>
    <insert id="Nebula-NebulaScriptGroupDao-Insert-Selective" parameterType="NebulaScriptGroup">
        insert into nebula_script_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null" >
                id,
            </if>
            <if test="scriptGroupName != null" >
                script_group_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="scriptGroupName != null" >
                #{scriptGroupName,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="Nebula-NebulaScriptGroupDao-Update-By-Id-Selective" parameterType="NebulaScriptGroup">
        update nebula_script_group
        <set>
            <if test="scriptGroupName != null" >
                script_group_name = #{scriptGroupName,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="Nebula-NebulaScriptGroupDao-Update-By-Id" parameterType="NebulaScriptGroup">
        update nebula_script_group set
        script_group_name = #{scriptGroupName,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="nebula_user_info">
    <resultMap id="RM-NebulaUserInfo" type="com.olymtech.nebula.entity.NebulaUserInfo">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="mobile_phone" property="mobilePhone" jdbcType="VARCHAR" />
        <result column="weixin_acc" property="weixinAcc" jdbcType="VARCHAR" />
        <result column="qq_acc" property="qqAcc" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="nickname" property="nickname" jdbcType="VARCHAR" />
        <result column="dept_name" property="deptName" jdbcType="VARCHAR" />
        <result column="job_title" property="jobTitle" jdbcType="VARCHAR" />
        <result column="emp_id" property="empId" jdbcType="INTEGER" />
        <result column="supervisor_emp_id" property="supervisorEmpId" jdbcType="INTEGER" />
        <result column="is_enable" property="isEnable" jdbcType="INTEGER" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="security_key" property="securityKey" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="NebulaUserInfo-Base-Column-List">
        id,
        username,
        mobile_phone,
        weixin_acc,
        qq_acc,
        email,
        nickname,
        dept_name,
        job_title,
        emp_id,
        supervisor_emp_id,
        is_enable,
        password,
        security_key
    </sql>
    <select id="Nebula-NebulaUserInfoDao-Select-By-Id" parameterType="java.lang.Integer" resultMap="RM-NebulaUserInfo">
        select
        <include refid="NebulaUserInfo-Base-Column-List"/>
        from nebula_user_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="Nebula-NebulaUserInfoDao-Select-By-Emp-Id" parameterType="java.lang.Integer" resultMap="RM-NebulaUserInfo">
        select
        <include refid="NebulaUserInfo-Base-Column-List"/>
        from nebula_user_info
        where emp_id = #{empId,jdbcType=INTEGER}
    </select>
    <select id="Nebula-NebulaUserInfoDao-Select-By-UserName" parameterType="java.lang.Integer" resultMap="RM-NebulaUserInfo">
        select
        <include refid="NebulaUserInfo-Base-Column-List"/>
        from nebula_user_info
        where username = #{username,jdbcType=VARCHAR}
    </select>
    <select id="Nebula-NebulaUserInfoDao-Select-Count" resultType="java.lang.Integer">
        select count(id) from nebula_user_info
    </select>
    <select id="Nebula-NebulaUserInfoDao-Select-Count-Where" parameterType="NebulaUserInfo" resultType="java.lang.Integer">
        select count(id) from nebula_user_info
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="username != null">
                username = #{username}
            </if>
            <if test="email != null">
                AND email = #{email}
            </if>
        </trim>
    </select>
    <select id="Nebula-NebulaUserInfoDao-Select-All-Paging-Where" parameterType="NebulaUserInfo" resultMap="RM-NebulaUserInfo">
        select <include refid="NebulaUserInfo-Base-Column-List"/> from nebula_user_info
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="username != null">
                username = #{username}
            </if>
            <if test="email != null">
                AND email = #{email}
            </if>
        </trim>
        group by id order by id desc
    </select>
    <delete id="Nebula-NebulaUserInfoDao-Delete-By-Id" parameterType="java.lang.Integer">
        delete from nebula_user_info
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="Nebula-NebulaUserInfoDao-Insert" parameterType="NebulaUserInfo">
        insert into nebula_user_info (
        id,
        username,
        mobile_phone,
        weixin_acc,
        qq_acc,
        email,
        nickname,
        dept_name,
        job_title,
        emp_id,
        supervisor_emp_id,
        is_enable,
        password,
        security_key)
        values (#{id,jdbcType=INTEGER},
        #{username,jdbcType=VARCHAR},
        #{mobilePhone,jdbcType=VARCHAR},
        #{weixinAcc,jdbcType=VARCHAR},
        #{qqAcc,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR},
        #{nickname,jdbcType=VARCHAR},
        #{deptName,jdbcType=VARCHAR},
        #{jobTitle,jdbcType=VARCHAR},
        #{empId,jdbcType=INTEGER},
        #{supervisorEmpId,jdbcType=INTEGER},
        #{isEnable,jdbcType=INTEGER},
        #{password,jdbcType=VARCHAR},
        #{securityKey,jdbcType=VARCHAR})
        <selectKey resultType="java.lang.Integer" keyProperty="id">
            SELECT LAST_INSERT_ID() AS ID
        </selectKey>
    </insert>
    <insert id="Nebula-NebulaUserInfoDao-Insert-Selective" parameterType="NebulaUserInfo">
        insert into nebula_user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null" >
                id,
            </if>
            <if test="username != null" >
                username,
            </if>
            <if test="mobilePhone != null" >
                mobile_phone,
            </if>
            <if test="weixinAcc != null" >
                weixin_acc,
            </if>
            <if test="qqAcc != null" >
                qq_acc,
            </if>
            <if test="email != null" >
                email,
            </if>
            <if test="nickname != null" >
                nickname,
            </if>
            <if test="deptName != null" >
                dept_name,
            </if>
            <if test="jobTitle != null" >
                job_title,
            </if>
            <if test="empId != null" >
                emp_id,
            </if>
            <if test="supervisorEmpId != null" >
                supervisor_emp_id,
            </if>
            <if test="isEnable != null" >
                is_enable,
            </if>
            <if test="password != null" >
                password,
            </if>
            <if test="securityKey != null" >
                security_key,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null" >
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="mobilePhone != null" >
                #{mobilePhone,jdbcType=VARCHAR},
            </if>
            <if test="weixinAcc != null" >
                #{weixinAcc,jdbcType=VARCHAR},
            </if>
            <if test="qqAcc != null" >
                #{qqAcc,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null" >
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="deptName != null" >
                #{deptName,jdbcType=VARCHAR},
            </if>
            <if test="jobTitle != null" >
                #{jobTitle,jdbcType=VARCHAR},
            </if>
            <if test="empId != null" >
                #{empId,jdbcType=INTEGER},
            </if>
            <if test="supervisorEmpId != null" >
                #{supervisorEmpId,jdbcType=INTEGER},
            </if>
            <if test="isEnable != null" >
                #{isEnable,jdbcType=INTEGER},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="securityKey != null" >
                #{securityKey,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="Nebula-NebulaUserInfoDao-Update-By-Id-Selective" parameterType="NebulaUserInfo">
        update nebula_user_info
        <set>
            <if test="username != null" >
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="mobilePhone != null" >
                mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
            </if>
            <if test="weixinAcc != null" >
                weixin_acc = #{weixinAcc,jdbcType=VARCHAR},
            </if>
            <if test="qqAcc != null" >
                qq_acc = #{qqAcc,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null" >
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="deptName != null" >
                dept_name = #{deptName,jdbcType=VARCHAR},
            </if>
            <if test="jobTitle != null" >
                job_title = #{jobTitle,jdbcType=VARCHAR},
            </if>
            <if test="empId != null" >
                emp_id = #{empId,jdbcType=INTEGER},
            </if>
            <if test="supervisorEmpId != null" >
                supervisor_emp_id = #{supervisorEmpId,jdbcType=INTEGER},
            </if>
            <if test="isEnable != null" >
                is_enable = #{isEnable,jdbcType=INTEGER},
            </if>
            <if test="password != null" >
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="securityKey != null" >
                security_key = #{securityKey,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="Nebula-NebulaUserInfoDao-Update-By-Id" parameterType="NebulaUserInfo">
        update nebula_user_info set
        username = #{username,jdbcType=VARCHAR},
        mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
        weixin_acc = #{weixinAcc,jdbcType=VARCHAR},
        qq_acc = #{qqAcc,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        nickname = #{nickname,jdbcType=VARCHAR},
        dept_name = #{deptName,jdbcType=VARCHAR},
        job_title = #{jobTitle,jdbcType=VARCHAR},
        emp_id = #{empId,jdbcType=INTEGER},
        supervisor_emp_id = #{supervisorEmpId,jdbcType=INTEGER},
        is_enable = #{isEnable,jdbcType=INTEGER},
        password = #{password,jdbcType=VARCHAR},
        security_key = #{securityKey,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>